[{"/Users/ryankrumbholz/OneDrive/development/mathup/mathup-client/src/index.js":"1","/Users/ryankrumbholz/OneDrive/development/mathup/mathup-client/src/App.js":"2","/Users/ryankrumbholz/OneDrive/development/mathup/mathup-client/src/serviceWorker.js":"3","/Users/ryankrumbholz/OneDrive/development/mathup/mathup-client/src/app/store.js":"4","/Users/ryankrumbholz/OneDrive/development/mathup/mathup-client/src/components/Home/Home.js":"5","/Users/ryankrumbholz/OneDrive/development/mathup/mathup-client/src/components/Challenge/Challenge.js":"6","/Users/ryankrumbholz/OneDrive/development/mathup/mathup-client/src/components/Problem_Container/Problem_Container.js":"7","/Users/ryankrumbholz/OneDrive/development/mathup/mathup-client/src/auth/protected-route.js":"8","/Users/ryankrumbholz/OneDrive/development/mathup/mathup-client/src/components/Problem_Card/Problem_Card.js":"9","/Users/ryankrumbholz/OneDrive/development/mathup/mathup-client/src/components/Answer_Container/Answer_Container.js":"10","/Users/ryankrumbholz/OneDrive/development/mathup/mathup-client/src/components/Answer_Card/Answer_Card.js":"11","/Users/ryankrumbholz/OneDrive/development/mathup/mathup-client/src/components/Navbar/Navbar.js":"12","/Users/ryankrumbholz/OneDrive/development/mathup/mathup-client/src/components/Auth_Nav/Auth_Nav.js":"13","/Users/ryankrumbholz/OneDrive/development/mathup/mathup-client/src/components/Auth_Button/Auth_Button.js":"14","/Users/ryankrumbholz/OneDrive/development/mathup/mathup-client/src/components/Login_Button/Login_Button.js":"15","/Users/ryankrumbholz/OneDrive/development/mathup/mathup-client/src/components/Logout_Button/Logout_Button.js":"16","/Users/ryankrumbholz/OneDrive/development/mathup/mathup-client/src/auth/auth0-provider-with-history.js":"17","/Users/ryankrumbholz/OneDrive/development/mathup/mathup-client/src/components/Loading/Loading.js":"18","/Users/ryankrumbholz/OneDrive/development/mathup/mathup-client/src/components/Signup_Button/Signup_Button.js":"19","/Users/ryankrumbholz/OneDrive/development/mathup/mathup-client/src/components/Account/Account.js":"20","/Users/ryankrumbholz/OneDrive/development/mathup/mathup-client/src/components/Topics/Topics.js":"21"},{"size":932,"mtime":1607604795336,"results":"22","hashOfConfig":"23"},{"size":889,"mtime":1607610462370,"results":"24","hashOfConfig":"23"},{"size":5141,"mtime":499162500000,"results":"25","hashOfConfig":"23"},{"size":112,"mtime":1607385682554,"results":"26","hashOfConfig":"23"},{"size":157,"mtime":1607385581474,"results":"27","hashOfConfig":"23"},{"size":237,"mtime":1607606744613,"results":"28","hashOfConfig":"23"},{"size":6476,"mtime":1607524974792,"results":"29","hashOfConfig":"23"},{"size":407,"mtime":1607607510798,"results":"30","hashOfConfig":"23"},{"size":251,"mtime":1607462463639,"results":"31","hashOfConfig":"23"},{"size":1335,"mtime":1607610427630,"results":"32","hashOfConfig":"23"},{"size":685,"mtime":1607609903468,"results":"33","hashOfConfig":"23"},{"size":425,"mtime":1607607521578,"results":"34","hashOfConfig":"23"},{"size":690,"mtime":1607607622718,"results":"35","hashOfConfig":"23"},{"size":407,"mtime":1607606129097,"results":"36","hashOfConfig":"23"},{"size":325,"mtime":1607526364068,"results":"37","hashOfConfig":"23"},{"size":375,"mtime":1607526604607,"results":"38","hashOfConfig":"23"},{"size":732,"mtime":1607528846240,"results":"39","hashOfConfig":"23"},{"size":270,"mtime":1607605842324,"results":"40","hashOfConfig":"23"},{"size":387,"mtime":1607526409762,"results":"41","hashOfConfig":"23"},{"size":160,"mtime":1607607902303,"results":"42","hashOfConfig":"23"},{"size":158,"mtime":1607607814131,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"93jfdm",{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"50"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"/Users/ryankrumbholz/OneDrive/development/mathup/mathup-client/src/index.js",[],"/Users/ryankrumbholz/OneDrive/development/mathup/mathup-client/src/App.js",["89"],"/Users/ryankrumbholz/OneDrive/development/mathup/mathup-client/src/serviceWorker.js",[],["90","91"],"/Users/ryankrumbholz/OneDrive/development/mathup/mathup-client/src/app/store.js",[],"/Users/ryankrumbholz/OneDrive/development/mathup/mathup-client/src/components/Home/Home.js",[],"/Users/ryankrumbholz/OneDrive/development/mathup/mathup-client/src/components/Challenge/Challenge.js",["92"],"/Users/ryankrumbholz/OneDrive/development/mathup/mathup-client/src/components/Problem_Container/Problem_Container.js",["93","94","95","96"],"import React, { useState } from 'react';\nimport Problem_Card from '../Problem_Card/Problem_Card';\nimport Answer_Container from '../Answer_Container/Answer_Container';\nimport { Random } from \"random-js\";\n\nconst Problem_Container = () => {\n\n    const [isCorrect, setCorrect] = useState(false);\n\n    const random = new Random();\n    let type = 'addition';\n    let problem;\n    let ans;\n    let answers = [];\n    \n    //TODO Create function to generate problem based on problem type\n    const genProblem = type => {\n        let p;\n        let n;\n        let k;\n        let ans;\n        let ansArr;\n        switch (type) {\n            default:\n                console.log('Error with problem type.');\n                break;\n            case 'additionOnes':\n                n = random.integer(0,9);\n                k = random.integer(0,9);\n                p  = `${n} + ${k} = ?`;\n                ans = n + k;\n                break;\n            case 'additionTens':\n                n = random.integer(0,99);\n                k = random.integer(0,99);\n                p  = `${n} + ${k} = ?`;\n                ans = n + k;\n                break;\n            case 'addition': \n                n = random.integer(0,999);\n                k = random.integer(0,999);\n                p  = `${n} + ${k} = ?`;\n                ans = n + k;\n                break;\n            case 'subtractionOnes':\n                n = random.integer(0,9);\n                k = random.integer(0,9);\n                p  = `${n} - ${k} = ?`;\n                ans = n - k;\n                break;\n            case 'subtractionTens':\n                n = random.integer(0,99);\n                k = random.integer(0,99);\n                p  = `${n} - ${k} = ?`;\n                ans = n - k;\n                break;\n            case 'subtraction':\n                n = random.integer(0,999);\n                k = random.integer(0,999);\n                p  = `${n} - ${k} = ?`;\n                ans = n - k;\n                break;\n            case 'multiplyOnes':\n                n = random.integer(0,9);\n                k = random.integer(0,9);\n                p  = `${n} x ${k} = ?`;\n                ans = n * k;\n                break;\n            case 'multiplyTens':\n                n = random.integer(0,99);\n                k = random.integer(0,99);\n                p  = `${n} x ${k} = ?`;\n                ans = n * k;\n                break;\n            case 'multiply':\n                n = random.integer(0,999);\n                k = random.integer(0,999);\n                p  = `${n} x ${k} = ?`;\n                ans = n * k;\n                break;\n            case 'divideOnes':\n                n = random.integer(0,9);\n                k = random.integer(0,9);\n                p  = `${n} / ${k} = ?`;\n                ans = n / k;\n                break;\n            case 'divideTens':\n                    n = random.integer(0,99);\n                    k = random.integer(0,99);\n                    p  = `${n} / ${k} = ?`;\n                    ans = n / k;\n                    break;\n            case 'divide':\n                n = random.integer(0,999);\n                k = random.integer(0,999);\n                p  = `${n} / ${k} = ?`;\n                ans = n / k;\n                break;\n            case 'sysEq':\n                break;\n        }\n        ansArr = pushAnswersAndShuffle(type, ans);\n        return [p, ans, ansArr];\n    };\n\n\n    //TODO Create function to get problem from db if problem cannot be auto generated;\n    const getProblem = type => {\n\n    }\n\n    //TODO Create function to get answer from db if answer cannot be\n    const getAnswer = type => {\n\n    }\n\n    const shuffle = (array) => {\n        var currentIndex = array.length\n          , temporaryValue\n          , randomIndex\n          ;\n    \n        // While there remain elements to shuffle...\n        while (0 !== currentIndex) {\n    \n          // Pick a remaining element...\n          randomIndex = random.integer(0,currentIndex - 1);\n          currentIndex -= 1;\n    \n          // And swap it with the current element.\n          temporaryValue = array[currentIndex];\n          array[currentIndex] = array[randomIndex];\n          array[randomIndex] = temporaryValue;\n        }\n    \n        return array;\n      };\n\n    const pushAnswersAndShuffle = (type, ans) => {\n        let answersMap = new Map();\n        let ansArr = [];\n        let floor;\n        let ceil;\n\n        ansArr.push(ans);\n        answersMap.set(ans, ans);\n\n        switch (type){\n            default:\n                console.log('Problem type error.');\n                break;\n            case 'addition':\n            case 'additionOnes':\n            case 'additionTens':\n            case 'subtraction':\n            case 'subtractionOnes':\n            case 'subtractionTens':\n            case 'multiply':\n            case 'multiplyOnes':\n            case 'multiplyTens':\n            case 'divide':\n            case 'divideOnes':\n            case 'divideTens':\n                floor = ans - 10;\n                ceil = ans + 10;\n                // Looping the length of remaining cards to be filled after pushing correct answer to array.\n                for (let i = 0; i < 3; i++) {\n                    let val = random.integer(floor,ceil);\n                    if (val !== ans && !answersMap.has(val)) {\n                        ansArr.push(val);\n                        answersMap.set(val, val);\n                    }\n                    else {\n                        // While current value is already not in the array. Checks hashmap.\n                        while (answersMap.has(val)) {\n                            val = random.integer(floor,ceil);\n                        }\n                        ansArr.push(val);\n                        answersMap.set(val, val);\n                    }\n                    \n                }\n                break;\n        }\n\n        return shuffle(ansArr);\n    }\n\n\n    // Generates new problem. Called when the correct answer is chosen.\n    const nxProblem = () => {\n        genProblem(type);\n        for (let i = 0; i < 2; i++) {setCorrect(!isCorrect)};\n    }\n\n\n    let problemData = genProblem(type);\n    problem = problemData[0];\n    ans = problemData[1];\n    answers = problemData[2];\n    \n\n    // pushAnswers();\n\n    return (\n        <div>\n            <Problem_Card problem = {problem}/>\n            <Answer_Container answers = {answers} corrAns = {ans} nxProblem = {nxProblem}/>\n        </div>\n    );\n}\n\nexport default Problem_Container;","/Users/ryankrumbholz/OneDrive/development/mathup/mathup-client/src/auth/protected-route.js",[],"/Users/ryankrumbholz/OneDrive/development/mathup/mathup-client/src/components/Problem_Card/Problem_Card.js",[],"/Users/ryankrumbholz/OneDrive/development/mathup/mathup-client/src/components/Answer_Container/Answer_Container.js",["97","98","99","100","101"],"/Users/ryankrumbholz/OneDrive/development/mathup/mathup-client/src/components/Answer_Card/Answer_Card.js",[],"/Users/ryankrumbholz/OneDrive/development/mathup/mathup-client/src/components/Navbar/Navbar.js",[],"/Users/ryankrumbholz/OneDrive/development/mathup/mathup-client/src/components/Auth_Nav/Auth_Nav.js",["102"],"/Users/ryankrumbholz/OneDrive/development/mathup/mathup-client/src/components/Auth_Button/Auth_Button.js",[],"/Users/ryankrumbholz/OneDrive/development/mathup/mathup-client/src/components/Login_Button/Login_Button.js",[],"/Users/ryankrumbholz/OneDrive/development/mathup/mathup-client/src/components/Logout_Button/Logout_Button.js",[],"/Users/ryankrumbholz/OneDrive/development/mathup/mathup-client/src/auth/auth0-provider-with-history.js",[],["103","104"],"/Users/ryankrumbholz/OneDrive/development/mathup/mathup-client/src/components/Loading/Loading.js",[],"/Users/ryankrumbholz/OneDrive/development/mathup/mathup-client/src/components/Signup_Button/Signup_Button.js",[],"/Users/ryankrumbholz/OneDrive/development/mathup/mathup-client/src/components/Account/Account.js",[],"/Users/ryankrumbholz/OneDrive/development/mathup/mathup-client/src/components/Topics/Topics.js",[],{"ruleId":"105","severity":1,"message":"106","line":6,"column":3,"nodeType":"107","messageId":"108","endLine":6,"endColumn":7},{"ruleId":"109","replacedBy":"110"},{"ruleId":"111","replacedBy":"112"},{"ruleId":"113","severity":1,"message":"114","line":7,"column":13,"nodeType":"115","endLine":7,"endColumn":34},{"ruleId":"105","severity":1,"message":"116","line":108,"column":11,"nodeType":"107","messageId":"108","endLine":108,"endColumn":21},{"ruleId":"105","severity":1,"message":"117","line":113,"column":11,"nodeType":"107","messageId":"108","endLine":113,"endColumn":20},{"ruleId":"113","severity":1,"message":"118","line":207,"column":13,"nodeType":"115","endLine":207,"endColumn":48},{"ruleId":"113","severity":1,"message":"119","line":208,"column":13,"nodeType":"115","endLine":208,"endColumn":92},{"ruleId":"120","severity":1,"message":"121","line":11,"column":17,"nodeType":"122","messageId":"123","endLine":11,"endColumn":19},{"ruleId":"113","severity":1,"message":"124","line":32,"column":13,"nodeType":"115","endLine":32,"endColumn":87},{"ruleId":"113","severity":1,"message":"124","line":33,"column":13,"nodeType":"115","endLine":33,"endColumn":87},{"ruleId":"113","severity":1,"message":"124","line":34,"column":13,"nodeType":"115","endLine":34,"endColumn":87},{"ruleId":"113","severity":1,"message":"124","line":35,"column":13,"nodeType":"115","endLine":35,"endColumn":87},{"ruleId":"113","severity":1,"message":"125","line":8,"column":35,"nodeType":"115","endLine":8,"endColumn":52},{"ruleId":"109","replacedBy":"126"},{"ruleId":"111","replacedBy":"127"},"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","no-native-reassign",["128"],"no-negated-in-lhs",["129"],"react/jsx-pascal-case","Imported JSX component Problem_Container must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","'getProblem' is assigned a value but never used.","'getAnswer' is assigned a value but never used.","Imported JSX component Problem_Card must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Answer_Container must be in PascalCase or SCREAMING_SNAKE_CASE","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Imported JSX component Answer_Card must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Signup_Button must be in PascalCase or SCREAMING_SNAKE_CASE",["128"],["129"],"no-global-assign","no-unsafe-negation"]