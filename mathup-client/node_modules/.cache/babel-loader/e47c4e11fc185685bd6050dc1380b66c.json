{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/ryankrumbholz/OneDrive/development/mathup/mathup-client/src/components/Answer_Container/Answer_Container.js\";\nimport React from 'react';\nimport Answer_Card from '../Answer_Card/Answer_Card';\nimport { Random } from \"random-js\";\n\nconst Answer_Container = () => {\n  const random = new Random();\n  let answers = [];\n  let answersMap = new Map();\n  let answer = 8;\n\n  const shuffle = array => {\n    var currentIndex = array.length,\n        temporaryValue,\n        randomIndex; // While there remain elements to shuffle...\n\n    while (0 !== currentIndex) {\n      // Pick a remaining element...\n      randomIndex = random.integer(0, currentIndex - 1);\n      currentIndex -= 1; // And swap it with the current element.\n\n      temporaryValue = array[currentIndex];\n      array[currentIndex] = array[randomIndex];\n      array[randomIndex] = temporaryValue;\n    }\n\n    return array;\n  };\n\n  answers.push(answer);\n  answersMap.set(answer, answer);\n\n  for (let i = 0; i < 3; i++) {\n    let val = random.integer(0, 20);\n\n    if (val !== answer) {\n      answers.push(val);\n      answersMap.set(val, val);\n    } else {\n      while (answersMap.has(val)) {\n        val = random.integer(0, 20);\n      }\n\n      answers.push(val);\n      answersMap.set(val, val);\n    }\n  }\n\n  answers = shuffle(answers);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Answer_Card, {\n      answer: answers[0]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Answer_Card, {\n      answer: answers[1]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Answer_Card, {\n      answer: answers[2]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Answer_Card, {\n      answer: answers[3]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Answer_Container;\nexport default Answer_Container;\n\nvar _c;\n\n$RefreshReg$(_c, \"Answer_Container\");","map":{"version":3,"sources":["/Users/ryankrumbholz/OneDrive/development/mathup/mathup-client/src/components/Answer_Container/Answer_Container.js"],"names":["React","Answer_Card","Random","Answer_Container","random","answers","answersMap","Map","answer","shuffle","array","currentIndex","length","temporaryValue","randomIndex","integer","push","set","i","val","has"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,4BAAxB;AACA,SAASC,MAAT,QAAuB,WAAvB;;AAEA,MAAMC,gBAAgB,GAAG,MAAM;AAC3B,QAAMC,MAAM,GAAG,IAAIF,MAAJ,EAAf;AACA,MAAIG,OAAO,GAAG,EAAd;AACA,MAAIC,UAAU,GAAG,IAAIC,GAAJ,EAAjB;AACA,MAAIC,MAAM,GAAG,CAAb;;AAEA,QAAMC,OAAO,GAAIC,KAAD,IAAW;AACvB,QAAIC,YAAY,GAAGD,KAAK,CAACE,MAAzB;AAAA,QACIC,cADJ;AAAA,QAEIC,WAFJ,CADuB,CAMvB;;AACA,WAAO,MAAMH,YAAb,EAA2B;AAEzB;AACAG,MAAAA,WAAW,GAAGV,MAAM,CAACW,OAAP,CAAe,CAAf,EAAiBJ,YAAY,GAAG,CAAhC,CAAd;AACAA,MAAAA,YAAY,IAAI,CAAhB,CAJyB,CAMzB;;AACAE,MAAAA,cAAc,GAAGH,KAAK,CAACC,YAAD,CAAtB;AACAD,MAAAA,KAAK,CAACC,YAAD,CAAL,GAAsBD,KAAK,CAACI,WAAD,CAA3B;AACAJ,MAAAA,KAAK,CAACI,WAAD,CAAL,GAAqBD,cAArB;AACD;;AAED,WAAOH,KAAP;AACD,GApBH;;AAsBAL,EAAAA,OAAO,CAACW,IAAR,CAAaR,MAAb;AACAF,EAAAA,UAAU,CAACW,GAAX,CAAeT,MAAf,EAAuBA,MAAvB;;AAEA,OAAK,IAAIU,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuBA,CAAC,EAAxB,EAA4B;AACxB,QAAIC,GAAG,GAAGf,MAAM,CAACW,OAAP,CAAe,CAAf,EAAiB,EAAjB,CAAV;;AACA,QAAII,GAAG,KAAKX,MAAZ,EAAoB;AAChBH,MAAAA,OAAO,CAACW,IAAR,CAAaG,GAAb;AACAb,MAAAA,UAAU,CAACW,GAAX,CAAeE,GAAf,EAAoBA,GAApB;AACH,KAHD,MAIK;AACD,aAAOb,UAAU,CAACc,GAAX,CAAeD,GAAf,CAAP,EAA4B;AACxBA,QAAAA,GAAG,GAAGf,MAAM,CAACW,OAAP,CAAe,CAAf,EAAiB,EAAjB,CAAN;AACH;;AACDV,MAAAA,OAAO,CAACW,IAAR,CAAaG,GAAb;AACAb,MAAAA,UAAU,CAACW,GAAX,CAAeE,GAAf,EAAoBA,GAApB;AACH;AAEJ;;AAEDd,EAAAA,OAAO,GAAGI,OAAO,CAACJ,OAAD,CAAjB;AAEA,sBACI;AAAA,4BACI,QAAC,WAAD;AAAa,MAAA,MAAM,EAAIA,OAAO,CAAC,CAAD;AAA9B;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,WAAD;AAAa,MAAA,MAAM,EAAIA,OAAO,CAAC,CAAD;AAA9B;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI,QAAC,WAAD;AAAa,MAAA,MAAM,EAAIA,OAAO,CAAC,CAAD;AAA9B;AAAA;AAAA;AAAA;AAAA,YAHJ,eAII,QAAC,WAAD;AAAa,MAAA,MAAM,EAAIA,OAAO,CAAC,CAAD;AAA9B;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH,CAzDD;;KAAMF,gB;AA2DN,eAAeA,gBAAf","sourcesContent":["import React from 'react';\nimport Answer_Card from '../Answer_Card/Answer_Card';\nimport { Random } from \"random-js\";\n\nconst Answer_Container = () => {\n    const random = new Random();\n    let answers = [];\n    let answersMap = new Map();\n    let answer = 8;\n\n    const shuffle = (array) => {\n        var currentIndex = array.length\n          , temporaryValue\n          , randomIndex\n          ;\n    \n        // While there remain elements to shuffle...\n        while (0 !== currentIndex) {\n    \n          // Pick a remaining element...\n          randomIndex = random.integer(0,currentIndex - 1);\n          currentIndex -= 1;\n    \n          // And swap it with the current element.\n          temporaryValue = array[currentIndex];\n          array[currentIndex] = array[randomIndex];\n          array[randomIndex] = temporaryValue;\n        }\n    \n        return array;\n      };\n\n    answers.push(answer);\n    answersMap.set(answer, answer)\n\n    for (let i = 0; i < 3; i++) {\n        let val = random.integer(0,20);\n        if (val !== answer) {\n            answers.push(val);\n            answersMap.set(val, val)\n        }\n        else {\n            while (answersMap.has(val)) {\n                val = random.integer(0,20);\n            }\n            answers.push(val);\n            answersMap.set(val, val);\n        }\n        \n    }\n\n    answers = shuffle(answers);\n    \n    return (\n        <div>\n            <Answer_Card answer = {answers[0]}/>\n            <Answer_Card answer = {answers[1]}/>\n            <Answer_Card answer = {answers[2]}/>\n            <Answer_Card answer = {answers[3]}/>\n        </div>\n    );\n}\n\nexport default Answer_Container;"]},"metadata":{},"sourceType":"module"}